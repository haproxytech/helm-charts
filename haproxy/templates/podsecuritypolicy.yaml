{{/*
Copyright 2020 HAProxy Technologies LLC

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.podSecurityPolicy.create -}}
{{- $useHostNetwork := .Values.daemonset.useHostNetwork -}}
{{- $useHostPort := .Values.daemonset.useHostPort -}}
{{- $hostPorts := .Values.daemonset.hostPorts -}}
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ include "haproxy.fullname" . }}
  labels:
    {{- include "haproxy.labels" . | nindent 4 }}
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default,runtime/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  allowPrivilegeEscalation: true    # to be able to use privileged containers for initContainers
  allowedCapabilities:
    - NET_BIND_SERVICE
  fsGroup:
    rule: MustRunAs
    ranges:
      - max: 65535
        min: 1
{{- if $useHostNetwork }}
  hostNetwork: true
{{- end }}
{{- if or $useHostPort $useHostNetwork }}
  hostPorts:
{{- range $key, $value := .Values.containerPorts }}
  - min: {{ $value }}
    max: {{ $value }}
{{- end }}
{{- end }}
  hostIPC: false
  hostPID: false
  privileged: true
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - max: 65535
        min: 1
  volumes:
    - configMap
    - emptyDir
    - projected
    - secret
{{- end }}
